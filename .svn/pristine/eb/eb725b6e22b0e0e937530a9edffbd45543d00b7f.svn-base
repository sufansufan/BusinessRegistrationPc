<template>
  <div class="user-management-box">
    <div class="select-tools">
      <div>
        <div>
          <el-select v-model="select.status" placeholder="状态">
            <el-option
              v-for="item in []"
              :key="item.value"
              :label="item.label"
              :value="item.value"
            />
          </el-select>
        </div>
        <div>
          <el-input v-model="select.userNameAndPhone" placeholder="用户名/手机号"/>
        </div>
        <div>
          <el-select v-model="select.roleId" placeholder="角色">
            <el-option
              v-for="item in []"
              :key="item.value"
              :label="item.label"
              :value="item.value"
            />
          </el-select>
        </div>
        <div>
          <el-select v-model="select.campusId" placeholder="校区">
            <el-option
              v-for="item in []"
              :key="item.value"
              :label="item.label"
              :value="item.value"
            />
          </el-select>
        </div>
      </div>
      <div class="btn">
        <div>
          <el-button type="primary" icon="el-icon-search">搜索</el-button>
        </div>
        <div>
          <el-button icon="el-icon-refresh">重置搜索条件</el-button>
        </div>
        <div>
          <el-button type="primary" icon="el-icon-plus" @click="userSetting">新增</el-button>
        </div>
        <div>
          <el-button type="primary" icon="el-icon-download">导出</el-button>
        </div>
      </div>
    </div>
    <el-table v-loading="loading" :data="dataList" stripe border style="width: 100%">
      <el-table-column prop="userName" label="姓名"/>
      <el-table-column prop="loginName" label="用户名" width="150"/>
      <el-table-column prop="staffNo" label="工号"/>
      <el-table-column prop="mobile" label="手机号" width="150"/>
      <el-table-column label="所属校区/角色" width="400">
        <template slot-scope="scope">
          <div v-for="role in scope.row.role" :key="role.id" class="role-list">
            <div>
              <span v-for="(item, index) in role.campusNames" :key="index">{{ item }}</span>
            </div>
            <div>{{ role.roleName }}</div>
          </div>
        </template>
      </el-table-column>
      <el-table-column label="状态">
        <template slot-scope="scope">
          <div v-html="scope.row.statusHtm"/>
        </template>
      </el-table-column>
      <el-table-column label="操作" width="140" fixed="right">
        <template slot-scope="scope">
          <el-button type="text" @click="userSetting('edit', scope.row)">编辑</el-button>
          <el-button type="text">删除</el-button>
          <el-button type="text">停用</el-button>
        </template>
      </el-table-column>
    </el-table>
    <el-pagination
      v-show="count"
      :page-sizes="pageSizes"
      :page-size="limit"
      :total="count"
      :current-page="page"
      :layout="pageLayout"
      class="campus-pagination"
      @current-change="handleCurrentChange"
      @size-change="handleSizeChange"
    />
    <Dialog ref="dialog" width="478px">
      <el-form :inline="true" :model="userSettingForm" :rules="rules" label-position="top">
        <el-form-item label="姓名" prop="userName">
          <el-input v-model="userSettingForm.userName" placeholder="姓名"/>
        </el-form-item>
        <el-form-item label="用户名" prop="loginName">
          <el-input v-model="userSettingForm.loginName" placeholder="用户名"/>
        </el-form-item>
        <el-form-item label="手机号" prop="mobile">
          <el-input v-model="userSettingForm.mobile" placeholder="手机号"/>
        </el-form-item>
        <el-form-item label="工号" prop="staffNo">
          <el-input v-model="userSettingForm.staffNo" placeholder="工号"/>
        </el-form-item>
        <el-form-item label="所属校区">
          <div v-for="(role, index) in userSettingForm.role" :key="index" class="role-select">
            <el-select v-model="role.roleId" placeholder="校区" style="width: 200px;">
              <el-option label="区域一" value="shanghai"/>
              <el-option label="区域二" value="beijing"/>
            </el-select>
            <el-select v-model="role.campusIds" placeholder="角色" style="width: 200px;">
              <el-option label="区域一" value="shanghai"/>
              <el-option label="区域二" value="beijing"/>
            </el-select>
            <i class="el-icon-delete act-color" title="删除" @click="delRole(index)"/>
          </div>
        </el-form-item>
        <el-form-item>
          <el-button type="text" icon="el-icon-circle-plus" @click="addRole">添加角色</el-button>
        </el-form-item>
        <el-form-item class="btn">
          <el-button type="primary">密码重置</el-button>
          <el-button type="primary">确定</el-button>
          <el-button @click="$refs.dialog.show = false">取消</el-button>
        </el-form-item>
      </el-form>
    </Dialog>
  </div>
</template>

<script>
import tables from '@/mixin/tables'
import Dialog from '@/components/Dialog'
import { getSysUserList, addAndEditSysUser, editUserStatus } from '@/api/configure/userManagement'
export default {
  components: {
    Dialog
  },
  mixins: [tables],
  data() {
    return {
      select: {
        status: '',
        userNameAndPhone: '',
        roleId: '',
        campusId: ''
      },
      dataList: [],
      userSettingForm: {
        userName: '',
        loginName: '',
        mobile: '',
        staffNo: '',
        role: [{
          roleId: '',
          campusIds: ''
        }]
      },
      rules: {
        userName: [{ required: true, message: '请输入姓名', trigger: 'blur' }],
        loginName: [{ required: true, message: '请输入用户名', trigger: 'blur' }],
        mobile: [
          { required: true, message: '请输入手机号', trigger: 'blur' },
          {
            validator(rule, value, callback) {
              if (!/^\d+$/.test(value) || value.length !== 11) {
                callback(new Error('请输入正确的11位手机号!'))
              } else {
                callback()
              }
            },
            trigger: 'blur'
          }
        ],
        staffNo: [{ required: true, message: '请输入工号', trigger: 'blur' }]
      }
    }
  },
  created() {
    this.fetchData()
  },
  methods: {
    fetchData() {
      this.TFD(getSysUserList({
        page: this.page,
        limit: this.limit,
        ...this.select
      }).then(res => {
        const { count, list } = res.data
        this.count = count
        this.dataList = list.map(item => {
          item.statusHtm = this.renderStateTag(item.status, { true: '启用', false: '停用' })
          return item
        })
      }))
    },
    userSetting(type, row) {
      const dialog = this.$refs.dialog
      dialog.setTitle('新增用户')
      if (type === 'edit') {
        dialog.setTitle('编辑用户')
      } else {
        this.userSettingForm = {
          userName: '',
          loginName: '',
          mobile: '',
          staffNo: '',
          role: [{
            roleId: '',
            campusIds: ''
          }]
        }
      }
      dialog.show = true
    },
    addRole() {
      this.userSettingForm.role.push({
        roleId: '',
        campusIds: ''
      })
    },
    delRole(index) {
      if (this.userSettingForm.role.length === 1) return
      this.userSettingForm.role.splice(index, 1)
    }
  }
}
</script>

<style lang="scss">
.user-management-box {
  .role-list {
    display: flex;
    align-items: center;
    > div {
      flex: 1;
      span {
        display: block;
      }
    }
    &:not(:last-child) {
      border-bottom: 1px solid #ddd;
    }
  }
  .role-select {
    position: relative;
    &:not(:last-child) {
      margin-bottom: 10px;
    }
    > div:first-child {
      margin-right: 10px;
    }
    &:last-child:first-child {
      > i {
        display: none;
      }
    }
    > i {
      cursor: pointer;
      position: absolute;
      top: 8px;
      right: -22px;
      font-size: 16px;
    }
  }
}
</style>
