<template>
  <div class="teacher-manage-container">
    <router-view v-if="lastRoute"/>
    <template v-else>
      <div class="select-tools">
        <div>
          <div>
            <el-select v-model="select.teacherStatus" placeholder="状态" clearable>
              <el-option :value="true" label="启用"/>
              <el-option :value="false" label="停用"/>
            </el-select>
          </div>
          <div>
            <el-select v-model="select.subjects" placeholder="科目" clearable>
              <el-option
                v-for="item in constant.subject"
                :key="item.value"
                :label="item.label"
                :value="item.value"
              />
            </el-select>
          </div>
          <div>
            <el-cascader
              :options="constant.campus"
              v-model="select.adminOrganIds"
              :props="campusProps"
              placeholder="校区"
              change-on-select
              clearable/>
          </div>
          <div>
            <el-select v-model="select.teacherLevelIds" placeholder="级别" clearable>
              <el-option
                v-for="item in []"
                :key="item.value"
                :label="item.label"
                :value="item.value"
              />
            </el-select>
          </div>
          <div>
          <el-input v-model="select.nameAndMobile" placeholder="姓名/手机号" clearable /></div>
          <div>
          <el-input v-model="select.teacherNo" placeholder="老师工号" clearable /></div>
          <div class="class-num">
            班级数过滤
          </div>
          <div>
            <el-select v-model="select.particularYear" placeholder="年份" clearable>
              <el-option
                v-for="item in constant.particular_year"
                :key="item.value"
                :label="item.label"
                :value="item.value"
              />
            </el-select>
          </div>
          <div>
            <el-select v-model="select.season" placeholder="季节" clearable>
              <el-option
                v-for="item in constant.season"
                :key="item.value"
                :label="item.label"
                :value="item.value"
              />
            </el-select>
          </div>
          <el-date-picker
            v-model="select.yearMonth"
            type="month"
            placeholder="选择月"
            clearable/>
        </div>
        <div class="btn">
          <div>
            <el-button type="primary" icon="el-icon-search" @click="fetchData">搜索</el-button>
          </div>
          <div>
            <el-button icon="el-icon-refresh">重置搜索条件</el-button>
          </div>
          <div>
            <el-button type="primary" icon="el-icon-plus" @click="$router.push({name: 'AddTeacher'})">新增</el-button>
          </div>
          <div>
            <el-button type="primary" icon="el-icon-download">导出</el-button>
          </div>
          <div>
            <el-button type="primary" icon="el-icon-download">教师课表导出</el-button>
          </div>
        </div>
      </div>
      <div class="teacher-list" >
        <div v-loading="!teacherShow[index].status" v-for="(item, index) in dataList" :key="item.id" class="teacher-box" element-loading-spinner="none" element-loading-background="rgba(0, 0, 0, 0.1)">
          <div>
            <img :src="item.headImgUrl">
          </div>
          <div class="teacher-detail">
            <div>
              <h2>
                <span>{{ item.name }}</span>
                <span><img :src="item.sexImg"></span>
              </h2>
              <div class="teacher-info">
                <p><span>{{ item.subject }}</span> <span>{{ item.no }}</span> </p>
                <p><span>{{ item.adminOrganNames[0] }}</span> <span>{{ item.classNum }}</span> </p>
                <p><span>{{ item.mobile }}</span></p>
              </div>
            </div>
            <div class="teacher-operate" @click="teacherUfdifyShow(index)">
              <span class="act-color">• • •</span>
            </div>
            <div :class="{'teacher-operate-type':true, 'show': teacherShow[index].show}">
              <el-button type="text" @click="$router.push({path: '/backstage/teacherManagement/teacher/edit/'+ item.id})">编辑</el-button>
              <el-button type="text" @click="removeTeacher(item, index)">删除</el-button>
              <el-button type="text" @click="modifyStatus(item, index)">{{ item.status === true ? '停用' : '启用' }}</el-button>
            </div>
          </div>
        </div>
      </div>
      <el-pagination
        v-show="count"
        :page-sizes="pageSizes"
        :page-size="limit"
        :total="count"
        :current-page="page"
        :layout="pageLayout"
        class="campus-pagination"
        @current-change="handleCurrentChange"
        @size-change="handleSizeChange"
      />
    </template>
  </div>
</template>

<script>
import { mapGetters } from 'vuex'
import tables from '@/mixin/tables'
import { getTeacherList, editTeacherStatus, deleteTeacher } from '@/api/backstage/teacherManagement'
import { validateNumber } from '@/utils/validate'
import { sexImg } from '@/utils'
export default {
  name: 'Teacher',
  mixins: [tables],
  data() {
    return {
      select: {
        teacherStatus: '',
        subjects: '',
        adminOrganIds: [],
        teacherName: '',
        teacherMobile: '',
        teacherNo: '',
        teacherLevelIds: '',
        particularYear: '',
        season: '',
        yearMonth: '',
        nameAndMobile: ''
      },
      dataList: [],
      teacherShow: [],
      campusProps: {
        value: 'id',
        label: 'name'
      }
    }
  },
  computed: {
    ...mapGetters(['constant']),
    lastRoute() {
      return this.$route.matched.length > 3
    }
  },
  created() {
    this.$store.dispatch('getConstant', ['subject', 'campus', 'season', 'particular_year']).then(() => {
      this.fetchData()
    })
  },
  methods: {
    fetchData() {
      const { adminOrganIds, nameAndMobile } = this.select
      const params = {
        page: this.page,
        limit: this.limit,
        ...this.select
      }
      validateNumber(nameAndMobile) ? params.teacherMobile = nameAndMobile : params.teacherName = nameAndMobile
      params.adminOrganIds = adminOrganIds[adminOrganIds.length - 1]
      delete params.nameAndMobile
      this.BFD(getTeacherList(params).then(({ data }) => {
        const { count, list } = data
        this.count = count
        this.dataList = list
        this.teacherShow = []
        this.dataList.map(item => {
          item.statusHtm = this.renderStateTag(item.status ? '启用' : '停用')
          item.sexImg = sexImg(item.sex)
          item.subject = this.constant.subject.filter(d => item.subject.split(',')[0] === d.value)[0].label
          this.teacherShow.push({
            show: false,
            status: item.status
          })
          return item
        })
      }))
    },
    teacherUfdifyShow(index) {
      this.$set(this.teacherShow[index], 'show', !this.teacherShow[index].show)
    },
    modifyStatus(row, index) {
      this.$confirm('是否进行状态修改?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        const params = {
          id: row.id,
          status: !row.status
        }
        editTeacherStatus({ teacher: params }).then(res => {
          this.$message.success('修改成功')
          this.fetchData()
        })
      })
    },
    removeTeacher(row, index) {
      this.$confirm('是否删除改数据?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        deleteTeacher({ ids: row.id }).then(res => {
          this.$message.success('删除成功')
          this.fetchData()
        })
      })
    }
  }
}
</script>

<style lang="scss" scoped>
.teacher-manage-container{
  .class-num{
    line-height: 32px;
  }
  .teacher-list{
    display: flex;
    flex-wrap: wrap;
    background: #fcfcfc;
    & > div{
      min-width: 372px;
      height: 200px;
      background: #fff;
      box-shadow: 0px 0px 2px 2px #f8f8f8;
      margin-bottom: 20px;
      margin-right: 20px;
      border-radius: 4px;
    }
    .teacher-box{
      display: flex;
      position: relative;
      overflow: hidden;
      & > div:first-child{
        min-width: 150px;
        & > img{
          width: 150px;
          height: 200px;
        }
      }
      .teacher-detail{
        padding: 10px 0px 20px 20px;
        .teacher-info{
          color: #9c9c9c
        }
      }
      .teacher-operate{
          position: absolute;
          bottom: 0px;
          right: 0px;
          width:45px;
          height: 45px;
          border-top-left-radius: 45px;
          background: #f3f5f7;
          z-index: 50;
          cursor: pointer;
          & > span{
            margin-left: 13px;
            line-height: 52px;
          }
        }
      .teacher-operate-type{
        position: absolute;
        bottom: 0px;
        right: 0px;
        width: 170px;
        height: 45px;
        z-index: 30px;
        line-height: 45px;
        transition: all .6s;
        z-index: 40;
        transform: translate(200px, 0);
        &.show{
          transform: translate(0px, 0);
        }
      }

    }
  }
}
</style>
<style lang="scss">
.teacher-manage-container .el-loading-mask {
  z-index: 30;
}
</style>
